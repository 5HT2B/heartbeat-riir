{% extends "base" %}
{% block license %}
<!-- Copyright 2023 VJ <root@5ht2.me>
   -
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/.
   -
   - This file incorporates work covered by the following copyright and
   - permission notice:
   -
   -   Copyright 2020-2023 Liv <liv@frogg.ie>
   -
   -   Permission to use, copy, modify, and/or distribute this software for any
   -   purpose with or without fee is hereby granted, provided that the above
   -   copyright notice and this permission notice appear in all copies.
   -
   -   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
   -   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
   -   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
   -   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
   -   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
   -   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
   -   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. -->
{% endblock license %}

{% block title %}Stats - {{ server_name }}{% endblock title %}
{% block head %}
  <meta property="og:site_name" content="Stats - {{ server_name }}">
  <meta property="og:description" content="Stats for {{ server_name }}">
  <meta name="theme-color" content="#6495ed">
  <script>
    window.onload = function () {
      setInterval(updateInfo, 1000);
    };

    const map = {
      Y: 'year',
      M: 'month',
      w: 'week',
      d: 'day',
      h: 'hour',
      m: 'minute',
      s: 'second',
    };

    function plural(n, s) {
      return `${n} ${s}${n === 1 ? '' : 's'}`;
    }

    function format_relative(secs, suffix = false) {
      let Y, M, w, d, h, m, s, rem;
      [Y, rem] = [Math.floor(secs / 31536000), secs % 31536000];  // 365 * 24 * 60 * 60
      [M, rem] = [Math.floor(rem / 2592000), rem % 2592000];  // 30 * 24 * 60 * 60
      [w, rem] = [Math.floor(rem / 604800), rem % 604800];  // 7 * 24 * 60 * 60
      [d, rem] = [Math.floor(rem / 86400), rem % 86400];  // 24 * 60 * 60
      [h, rem] = [Math.floor(rem / 3600), rem % 3600];  // 60 * 60
      [m, s] = [Math.floor(rem / 60), rem % 60];
      let fmt = { Y, M, w, d, h, m, s };
      let arr = [];
      Object.entries(fmt).filter(([_, v]) => v > 0).forEach(([k, v]) => {
        arr.push(plural(v, map[k]));
      });
      if (arr.length === 0) {
        return '0 seconds';
      }
      if (arr.length === 1) {
        return arr[0];
      }
      return arr.slice(0, -1).join(', ') + ', and ' + arr.slice(-1) + (suffix ? ' ago' : '');
    }

    async function updateInfo() {
      let response = await fetch('/api/stats');
      let data = await response.json();
      await setInfo('visits', data.num_visits.toLocaleString(['en-GB']));
      await setInfo('devices', data.devices.length.toLocaleString(['en-GB']));
      await setInfo('total-beats', data.total_beats.toLocaleString(['en-GB']));
      await setInfo('uptime', format_relative(data.uptime));
    }

    async function setInfo(id, value) {
      document.getElementById(id).innerText = value;
    }
  </script>
{% endblock head %}
{% block body %}
  <div class="spacer"></div>
  <div class="pure-g preamble">
    <div class="pure-g-u-0 pure-u-lg-1-6"></div>
    <div class="pure-u-1 pure-u-lg-4-6">
      <p class="centre">
        Statistics for {{ server_name }}
      </p>
    </div>
    <div class="pure-g-u-0 pure-u-lg-1-6"></div>
  </div>
  <div class="pure-g times">
    <div class="pure-u-0 pure-u-lg-1-6"></div>
    <div class="pure-u-1 pure-u-lg-1-6">
      <p class="centre">
        Total visits:<br>
        <span id="visits">{{ visits | format_num }}</span>
      </p>
    </div>
    <div class="pure-u-1 pure-u-lg-1-6">
      <p class="centre">
        Total devices:<br>
        <span id="devices">{{ devices | format_num }}</span>
      </p>
    </div>
    <div class="pure-u-1 pure-u-lg-1-6">
      <p class="centre">
        Total beats received:<br>
        <span id="total-beats">{{ beats | format_num }}</span>
      </p>
    </div>
    <div class="pure-u-1 pure-u-lg-1-6">
      <p class="centre">
        Uptime:<br>
        <span id="uptime">{{ uptime | format_relative }}</span>
      </p>
    </div>
    <div class="pure-u-0 pure-u-lg-1-6"></div>
  </div>
  <div class="spacer"></div>
  <div class="pure-g links">
    <div class="pure-g-u-0 pure-u-lg-1-6"></div>
    <div class="pure-u-1 pure-u-lg-4-6">
      <p class="centre">
        <a href="/">Main Page</a> - <a href="/privacy">Privacy Policy</a>
      </p>
    </div>
    <div class="pure-g-u-0 pure-u-lg-1-6"></div>
  </div>
{% endblock body %}
