name: Rust

on:
  push:
    tags:
      - '*'

jobs:
  CD:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - target: aarch64-unknown-linux-gnu
            use-cross: true
          - target: i686-unknown-linux-gnu
            use-cross: true
          - target: x86_64-pc-windows-msvc
            use-cross: true
          - target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n 1)" >> "$GITHUB_ENV"
          echo "PROJECT_VERSION=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n 1)" >> "$GITHUB_ENV"
          PKG_SUFFIX=".tar.gz"
          case ${{ matrix.arch.target }} in *windows-*) PKG_SUFFIX=".zip" ;; esac
          unset PKG_NAME
          PKG_NAME="${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}-${{ matrix.arch.target }}${PKG_SUFFIX}"
          EXE_SUFFIX=
          case ${{ matrix.arch.target }} in *windows-*) EXE_SUFFIX=".exe" ;; esac
          echo "PKG_NAME=${PKG_NAME}" >> "$GITHUB_ENV"
          echo "ARCHIVE_DIR=__archive__" >> "$GITHUB_ENV"
          echo "EXE_SUFFIX=${EXE_SUFFIX}" >> "$GITHUB_ENV"
      - name: build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.arch.use-cross }}
          command: build
          args: --release --all-features --target=${{ matrix.arch.target }}
        env:
          SQLX_OFFLINE: 1
      - name: package
        shell: bash
        run: |
          # copy build artifacts
          mkdir -p "${{ env.ARCHIVE_DIR }}"
          cp "target/${{ matrix.arch.target }}/release/${{ env.PROJECT_NAME }}${{ env.EXE_SUFFIX }}" "${{ env.ARCHIVE_DIR }}/"
          # package binary
          pushd "${{ env.ARCHIVE_DIR }}" > /dev/null
          case ${{ matrix.arch.target }} in
            *windows-*) 7z -y a '${{ env.PKG_NAME }}' * | tail -2 ;;
            *) tar czf '${{ env.PKG_NAME }}' * ;;
          esac
          popd > /dev/null
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            ${{ env.ARCHIVE_DIR }}/${{ env.PKG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - name: extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n 1)" >> "$GITHUB_ENV"
          echo "PROJECT_VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n 1)" >> "$GITHUB_ENV"
      - name: build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
        env:
          SQLX_OFFLINE: 1
      - name: package
        shell: bash
        run: |
          mkdir -p "__archive__"
          cp "target/release/${{ env.PROJECT_NAME }}" "__archive__/"
          pushd "__archive__" > /dev/null
          tar czf  '${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}-x86_64-apple-darwin.tar.gz' *
          popd > /dev/null
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            __archive__/${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}-x86_64-apple-darwin.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
