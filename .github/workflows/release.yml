on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  release:
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-musl
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            target_rustflags: ''
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            target_rustflags: '-C linker=aarch64-linux-gnu-gcc -C link-self-contained=yes'
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
            target_rustflags: '-C linker=arm-linux-gnueabihf-gcc -C link-self-contained=yes'
          - target: x86_64-apple-darwin
            os: macos-latest
            target_rustflags: ''
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            target_rustflags: ''
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            target_rustflags: ''
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Install Rust Toolchain Components
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Install aarch64 toolchain
        if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Install armv7 toolchain
        if: ${{ matrix.target == 'armv7-unknown-linux-musleabihf' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf libc6-armhf-cross libc6-dev-armhf-cross
      - name: ref type
        id: ref-type
        run: cargo run -p ref-type -- --reference ${{ github.ref }} >> $GITHUB_OUTPUT
      - name: package
        id: package
        env:
          TARGET: ${{ matrix.target }}
          REF: ${{ github.ref }}
          OS: ${{ matrix.os }}
          TARGET_RUSTFLAGS: ${{ matrix.target_rustflags }}
        run: ./bin/package
        shell: bash
      - name: upload archive
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: false
          files: ${{ steps.package.outputs.archive }}
          prerelease: ${{ steps.ref-type.outputs.value != 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
