#!/usr/bin/env bash

set -euxo pipefail

VERSION=${REF#"refs/tags/"}
DIST=$(pwd)/dist

echo "Packaging heartbeat $VERSION for $TARGET..."

test -f Cargo.lock || cargo generate-lockfile

echo "Building heartbeat..."
# for ring
RUSTFLAGS="-D warnings"
if [[ "$OS" = ubuntu-latest ]]; then
  if [[ "${CARGO:-cargo}" = cargo ]]; then
    RUSTFLAGS="$RUSTFLAGS -C linker=lld"
  fi
  export TARGET_CC=clang
  export TARGET_AR=llvm-ar
fi
if [[ "$OS" != ubuntu-latest ]] || [[ "${TARGET##*-}" != gnu ]]; then
  RUSTFLAGS="$RUSTFLAGS -C target-feature=+crt-static"
fi

echo "RUSTFLAGS=$RUSTFLAGS"
FEATURES=('--no-default-features' '--features' 'badges,webhook,migrate')
case $TARGET in
  # ring doesn't build on MIPS
  mips*)
    FEATURES+=('--features' 'tls-native-vendored,sqlx-tls-native') ;;
  *)
    FEATURES+=('--features' 'tls-rustls,sqlx-tls-rustls') ;;
esac

RUSTFLAGS="${RUSTFLAGS}" \
  ${CARGO:-cargo} build --target "$TARGET" --release "${FEATURES[@]}" --locked
EXECUTABLE=target/$TARGET/release/heartbeat

if [[ "$OS" = windows-latest ]]; then
  EXECUTABLE=$EXECUTABLE.exe
fi

echo "Copying release files..."
mkdir "$DIST"
cp "$EXECUTABLE" LICENSE README.md config.example.toml conf/nginx.conf conf/Caddyfile "$DIST"

cd "$DIST"
echo "Creating release archive..."
case "$OS" in
  ubuntu-latest | macos-latest)
    ARCHIVE=$DIST/heartbeat-$VERSION-$TARGET.tar.xz
    tar cJf "$ARCHIVE" ./*
    shasum -a 256 "$ARCHIVE" > "$ARCHIVE".sha256
    echo "archive=$ARCHIVE" >> "$GITHUB_OUTPUT"
    echo "checksumfile=$ARCHIVE.sha256" >> "$GITHUB_OUTPUT"
    ;;
  windows-latest)
    ARCHIVE=$DIST/heartbeat-$VERSION-$TARGET.zip
    7z a "$ARCHIVE" ./*
    certutil -hashfile "$ARCHIVE" SHA256 > "$ARCHIVE".sha256
    echo "archive=$(pwd -W)/heartbeat-$VERSION-$TARGET.zip" >> "$GITHUB_OUTPUT"
    echo "checksumfile=$(pwd -W)/heartbeat-$VERSION-$TARGET.zip.sha256" >> "$GITHUB_OUTPUT"
    ;;
esac
